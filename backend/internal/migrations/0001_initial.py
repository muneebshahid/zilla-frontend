# Generated by Django 2.2.1 on 2019-06-09 09:45

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import internal.models.image
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='SiteUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_business', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ad',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('time_created', models.DateTimeField()),
                ('expiry_date', models.DateTimeField()),
                ('code', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='media/promotions/ads/')),
                ('cost_limit', models.FloatField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=50)),
                ('redeemed', models.BooleanField()),
                ('expired', models.BooleanField()),
                ('expiry_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('description', models.TextField()),
                ('time_created', models.DateTimeField()),
                ('expiry_date', models.DateTimeField()),
                ('code', models.CharField(max_length=50)),
                ('image', models.ImageField(upload_to='media/promotions/deals/')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=500)),
                ('slug', models.SlugField(max_length=500)),
                ('description', models.TextField()),
                ('price', models.FloatField()),
                ('available', models.BooleanField()),
                ('hidden', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='SitePage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag', models.CharField(max_length=500, primary_key=True, serialize=False)),
                ('slug', models.SlugField(unique=True)),
                ('tag_type', models.IntegerField(choices=[(0, 'BUSINESS_TYPE'), (1, 'AMENITY'), ('2', 'VICTUAL_TAG')], default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='AmenityTag',
            fields=[
                ('tag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='internal.Tag')),
            ],
            bases=('internal.tag',),
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='business', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('title', models.CharField(max_length=500)),
                ('slug', models.SlugField(max_length=500)),
                ('description', models.TextField()),
                ('website', models.CharField(max_length=500)),
                ('address', models.TextField()),
                ('claimed', models.BooleanField()),
                ('phone_no', models.CharField(max_length=500, null=True)),
                ('latlng', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=None)),
                ('amenities', models.ManyToManyField(related_name='businesses', to='internal.AmenityTag')),
            ],
        ),
        migrations.CreateModel(
            name='BusinessTypeTag',
            fields=[
                ('tag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='internal.Tag')),
            ],
            bases=('internal.tag',),
        ),
        migrations.CreateModel(
            name='ProductTag',
            fields=[
                ('tag_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='internal.Tag')),
            ],
            bases=('internal.tag',),
        ),
        migrations.CreateModel(
            name='SitePageStats',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('num_clicks', models.IntegerField()),
                ('click_details', django.contrib.postgres.fields.jsonb.JSONField()),
                ('site_page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='internal.SitePage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to=internal.models.image.get_product_image_path)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='internal.Product')),
            ],
        ),
        migrations.CreateModel(
            name='ItemPageStats',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('num_clicks', models.IntegerField()),
                ('click_details', django.contrib.postgres.fields.jsonb.JSONField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='internal.Product')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CouponPageStats',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('num_clicks', models.IntegerField()),
                ('click_details', django.contrib.postgres.fields.jsonb.JSONField()),
                ('coupon', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='internal.Coupon')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='coupon',
            name='deal',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='internal.Deal'),
        ),
        migrations.CreateModel(
            name='AdPageStats',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('num_clicks', models.IntegerField()),
                ('click_details', django.contrib.postgres.fields.jsonb.JSONField()),
                ('ad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='internal.Ad')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserStatsPerItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('review', models.TextField()),
                ('score', models.FloatField()),
                ('like', models.BooleanField()),
                ('date_time', models.DateTimeField()),
                ('tried', models.BooleanField()),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='internal.Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'item')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='internal.Business'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(related_name='products', to='internal.ProductTag'),
        ),
        migrations.CreateModel(
            name='OpeningTimings',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('monday_open', models.TimeField()),
                ('monday_close', models.TimeField()),
                ('tuesday_open', models.TimeField()),
                ('tuesday_close', models.TimeField()),
                ('wednesday_open', models.TimeField()),
                ('wednesday_close', models.TimeField()),
                ('thursday_open', models.TimeField()),
                ('thursday_close', models.TimeField()),
                ('friday_open', models.TimeField()),
                ('friday_close', models.TimeField()),
                ('saturday_open', models.TimeField()),
                ('saturday_close', models.TimeField()),
                ('sunday_open', models.TimeField()),
                ('sunday_close', models.TimeField()),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timings', to='internal.Business')),
            ],
        ),
        migrations.AddField(
            model_name='deal',
            name='business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='internal.Business'),
        ),
        migrations.CreateModel(
            name='BusinessPageStats',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('num_clicks', models.IntegerField()),
                ('click_details', django.contrib.postgres.fields.jsonb.JSONField()),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='internal.Business')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BusinessImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to=internal.models.image.get_business_image_path)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='internal.Business')),
            ],
        ),
        migrations.AddField(
            model_name='business',
            name='business_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='businesses', to='internal.BusinessTypeTag'),
        ),
        migrations.AddField(
            model_name='ad',
            name='business',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='internal.Business'),
        ),
        migrations.CreateModel(
            name='UserStatsPerBusiness',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('review', models.TextField()),
                ('score', models.FloatField()),
                ('like', models.BooleanField()),
                ('date_time', models.DateTimeField()),
                ('checkin', models.BooleanField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='internal.Business')),
            ],
            options={
                'unique_together': {('user', 'business')},
            },
        ),
    ]
